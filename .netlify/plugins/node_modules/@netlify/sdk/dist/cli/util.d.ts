import { NetlifyExtension } from "../index.js";
export declare const getExtensionModule: (builtPath: string, directory?: string) => Promise<NetlifyExtension<import("zod").ZodUnknown, import("zod").ZodUnknown, import("zod").ZodUnknown, import("zod").ZodUnknown, import("zod").ZodUnknown>>;
export declare const getExtensionBuildInfo: ({ cwd, outDirOveride, }: {
    cwd: string;
    outDirOveride?: string;
}) => Promise<{
    extensionPackageJson: any;
    sourceFilePath: string;
    builtPath: string;
    outDir: string;
    packageName: any;
}>;
type PackageJSON = {
    [key: string]: any;
    main?: string;
    dependencies?: {
        [key: string]: string;
    };
    devDependencies?: {
        [key: string]: string;
    };
    version: string;
};
export declare function getDepNames(packageJsonContents: PackageJSON): string[];
export declare function removeBundledDepsFromPackageJsonContents(packageJsonContents: PackageJSON, importedNodeModules?: Set<string>): PackageJSON;
export declare const getSettings: () => any;
export declare const updateSettings: (newSettings: Record<string, string | undefined>) => void;
export {};
//# sourceMappingURL=util.d.ts.map